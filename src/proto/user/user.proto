syntax="proto3";

package user;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/timestamp.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/RemyRanger/taktyl_core_grpc/proto/user;user";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://github.com/RemyRanger/taktyl_core_grpc";
    description: "gRPC-gateway boilerplate repository";
  }
  schemes: HTTP;
};

service UserService {
  rpc GetUser(GetUserRequest) returns (UserDTO) {
    option (google.api.http) = {
      // Route to this method from GET requests to /api/v1/events/{user_id}
      get: "/api/v1/users/{user_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a user"
      description: "Get a user from the server."
      tags: "Users"
    };
  }
  rpc AddUser(AddUserRequest) returns (UserDTO) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/users
      post: "/api/v1/users"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Add a user"
      description: "Add a user to the server."
      tags: "Users"
    };
  }
  rpc UpdateUser(UpdateUserRequest) returns (UserDTO) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/users
      put: "/api/v1/users"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update a user"
      description: "Update a user to the server."
      tags: "Users"
    };
  }
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserRequest) {
    option (google.api.http) = {
      // Route to this method from POST requests to /api/v1/users
      delete: "/api/v1/users/{user_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete a user"
      description: "Delete a user from the server."
      tags: "Users"
    };
  }
  rpc ListUsers(ListUsersRequest) returns (stream UserDTO) {
    option (google.api.http) = {
      // Route to this method from GET requests to /api/v1/users
      get: "/api/v1/users"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List users"
      description: "List all users on the server."
      tags: "Users"
    };
  }
}

message DeleteUserRequest {
  int32 user_id = 1;
}

message GetUserRequest {
  int32 user_id = 1;
}

message UpdateUserRequest {
  int32 ID = 1;
  string Nickname = 2;
  string Email = 3;
  string Password = 4;
}

message AddUserRequest {
  string Nickname = 1;
  string Email = 2;
  string Password = 3;
}

message ListUsersRequest {}

message UserDTO {
  int32 ID = 1;
  string Nickname = 2;
  string Email = 3;
  google.protobuf.Timestamp CreatedAt = 4;
  google.protobuf.Timestamp UpdatedAt = 5;
}
